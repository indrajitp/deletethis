pipeline{
    agent any
    tools{
        maven 'Jenkins-Maven'
        jdk 'Jenkins-Java'
    }
    environment{
	    user_creds = credentials('ip_apigee_creds')
    }
    stages{
        stage ('Initialize'){
            steps {
                sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                    echo "My creds are = ${user_creds_usr} ${user_creds_psw}"
                '''
            }
        }
        stage('CheckOut & FindOut'){
            steps{
                script{
                    cleanWs()
                    dir("${WORKSPACE}")
                    {
                        checkout([$class: 'GitSCM', branches: [[name: '*/dev']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '6bbcd2a7-09d4-4f45-9f9a-688c9e2ea1d3', url: 'https://github.com/indrajitp/deletethis.git']]])
                        sh '''
   
							ls -ltr
							pwd
                            git log -1 | grep -i commit | awk '{print $2}' > AD_latestcommitidfile
                            if [ `cat AD_latestcommitidfile` == `cat ~/AD_oldcommitidfile` ]
                            then
                                touch $WORKSPACE/AD_changed_files
                            else
                                git diff HEAD^ HEAD --name-only | awk -F'/' '{print $2}' | grep -vE "jenkinsfile|gitignore|zip" | sort -u > $WORKSPACE/AD_changed_files
                                cat $WORKSPACE/AD_changed_files
                                cat $WORKSPACE/AD_changed_files > ~/file_to_be_build
                                cat ~/file_to_be_build
				
								#echo "gnf-api" > $WORKSPACE/AD_changed_files
                                git log -1 | grep -i commit | awk '{print $2}' > ~/AD_oldcommitidfile
                            fi
							pwd
                        '''
                    }
                }
            }
        }
        stage('Build & SCAN'){
            steps{
                script{
                    dir("${WORKSPACE}")
                    {
                        def service_count = sh(script: "cat $WORKSPACE/AD_changed_files | wc -l ", returnStdout: true).trim()
                        println "service_count:$service_count"
                        //def n = service_count.toInteger()
                        if(service_count!=0)
                        {
                            for(i=0; i<service_count.toInteger(); i++)
                            {
                                //get service name and version number to take a maven build and deploy to artifactory
                                def service = sh(script: "cat $WORKSPACE/AD_changed_files | head -1", returnStdout: true).trim()
				                //def version = sh(script: "grep -oP '<version>(.*)</version>' $WORKSPACE/apiproxies/$service/pom.xml | head -1 | cut -d '>' -f 2 | cut -d '<' -f 1", returnStdout: true).trim()
				                def version = sh script: 'mvn help:evaluate -Dexpression=project.version -q -DforceStdout', returnStdout: true, file: '$WORKSPACE/apiproxies/$service/pom.xml'
                                println "version:$version"
                               
                                    //Create a maven build for specific service
                                    sh '''
				    				echo "My creds are = $user_creds_usr and pass $user_creds_psw"
                                    exit 0	
									service=`cat $WORKSPACE/AD_changed_files | head -1`
									echo 'Deploying a $service Proxy'
									ls -ltr
									cd $WORKSPACE/apiproxies/$service
									#apigeelint -s apiproxies/$service/apiproxy -f html.js
									cat
									echo '*********************************************************'
									echo ' Java Code Scan using JSLint   '
									echo '*********************************************************'
									#jslint '**/*.js'
									#install -X -Ptest -D username=$ae_username -D password=$ae_password -D org=globalpay -Dapigee.config.options=create
									cd target
									pwd
									echo "{$WORKSPACE}"
									ls -ltr
									'''
									//Upload to artifactory
                                    def server = Artifactory.server 'artifactory'
                                    def uploadSpec = """{
                                    "files": [
                                        {
                                            "pattern": "$WORKSPACE/apiproxies/${service}/target/*.zip",
                                            "target": "libs-snapshot-local/com/gpi/apigee/${service}/${version}/"
                                        }
                                    ]
                                    }"""
                                    server.upload(uploadSpec)
                                    def buildInfo = server.upload uploadSpec
                                    server.publishBuildInfo buildInfo
                         
                               
                               
                                //remove recently built service name from build list
                                sh '''
                                    cd $WORKSPACE
                                    sed -i '1d' $WORKSPACE/AD_changed_files
                                '''
                            }
                        }
                    }
                }
            }
        }
    }
   
}
